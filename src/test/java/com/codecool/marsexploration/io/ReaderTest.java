package com.codecool.marsexploration.io;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.io.IOException;
import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.*;

class ReaderTest {

    public static Stream<Arguments> dataForMapReaderTest() {
        String[][] resultMap1 = {
                {" "," "," "," "," "," ","*"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," ","^","^"," ","^","^"," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," ","^","^","^","^","^","^"," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," ","*"," ","^","^"," ","^","^","^","^","^"," "," "," "," "," "," "," "," "," "," "," "},
                {" "," ","*"," ","^","^","^"," ","^","^"," ","^"," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," ","^","^","^","^","^","^"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," ","^","^","^","^","^","^"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," ","^"," ","^","^","^"," "," "," "," "," "," "," "," "," ","^","^"," "," "," "," "," "},
                {" "," "," "," "," "," ","^"," "," "," "," "," "," "," "," "," ","*","^"," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","*","^","^"," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," ","^","^"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," ","^","^","^"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {"*","^","^","^"," ","^"," "," "," "," ","~","#","#","#","#"," "," "," "," "," "," "," "," "," "},
                {" ","^","^","^"," "," ","^"," "," "," "," ","#"," ","#","#"," "," "," "," "," "," "," "," "," "},
                {" "," ","^","^","^","^","^"," "," "," "," ","#","#","#"," "," "," "," "," "," "," "," "," "," "},
                {" "," "," ","^","^"," "," ","*"," "," "," "," "," "," "," "," "," "," ","~"," "," ","#"," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," ","#","#","#"," ","#","#","#","#","#"," ","~"," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," ","~","#"," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," ","~"," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "}
        };

        return Stream.of (
                Arguments.of("/exploration-1.map", resultMap1)
        );
    }

    @ParameterizedTest
    @MethodSource("dataForMapReaderTest")
    void mapReader(String path, String[][] expected) throws IOException {
        Reader reader = new Reader();
        String[][] result = reader.mapReader(path);
        assertEquals(expected, result);
    }
}
